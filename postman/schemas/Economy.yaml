openapi: '3.0.2'
info:
  description: "This is the API server for the Metanomic Economy Engine. You can find out more about Metanomic at [http://metanomic.net](http://metanomic.net). You will need a set of Account API Keys to test the entrypoints."
  version: "1.0.0"
  title: "Metanomic Economy Engine"
  termsOfService: "http://metanomic.net/terms/"
  contact:
    email: "engineering@metanomic.net"
servers:
  - url: https://api.metanomic.cloud/v1
tags:
  - name: "games"
    description: "Everything about your games"
    externalDocs:
      description: "Find out more"
      url: "http://docs.metanomic.net/games"
  - name: "session"
    description: "Everything about your session"
    externalDocs:
      description: "Find out more"
      url: "http://docs.metanomic.net/session"
  - name: "simulation"
    description: "Everything about your simulation"
    externalDocs:
      description: "Find out more"
      url: "http://docs.metanomic.net/simulation"
  - name: "modules"
    description: "Everything about your modules"
    externalDocs:
      description: "Find out more"
      url: "http://docs.metanomic.net/modules"
  - name: "analytics"
    description: "Everything about your analytics"
    externalDocs:
      description: "Find out more"
      url: "http://docs.metanomic.net/analytics"
  - name: "events"
    description: "Everything about your events"
    externalDocs:
      description: "Find out more"
      url: "http://docs.metanomic.net/events"
paths:
  /games:
    get:
      operationId: listGames
      summary: List The Games that the account or Organasation has created
      responses:
        '200':
          description: |-
            200 response

security:
  - guest: []
  - all: []
components:
  schemas:
    Pet:
      allOf:
        - $ref: '#/components/schemas/NewPet'
        - type: object
          required:
          - id
          properties:
            id:
              type: integer
              format: int64

    NewPet:
      type: object
      required:
        - name  
      properties:
        name:
          type: string
        tag:
          type: string    

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    name:
      type: object
      properties:
        property:
          type: integer
  responses:
    name:
      description: ''
      content:
        application/json:
          schema: {}
  securitySchemes:
    name:
      type: apiKey
      name: api_key
      in: query
    name1:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://domain.test/api/oauth/dialog
          tokenUrl: https://domain.test/api/oauth/token
          scopes:
            read: example read scope
            write: example write scope
    name2:
      type: http
      scheme: bearer
      bearerFormat: JWT
