openapi: 3.1.0
info:
    title: "Metanomic Economy Engine"
    version: 1.0.0
    description: "This is the API server for the Metanomic Economy Engine. You can find out more about Metanomic at [http://metanomic.net](http://metanomic.net). You will need a set of Account API Keys to test the entrypoints."
    termsOfService: "http://metanomic.net/terms/"
    contact:
        email: "engineering@metanomic.net"
servers:
    - url: https://api.metanomic.cloud/v1
tags:
    - name: "games"
      description: "Everything about your games"
      externalDocs:
          description: "Find out more"
          url: "http://docs.metanomic.net/games"
    - name: "session"
      description: "Everything about your session"
      externalDocs:
          description: "Find out more"
          url: "http://docs.metanomic.net/session"
    - name: "simulation"
      description: "Everything about your simulation"
      externalDocs:
          description: "Find out more"
          url: "http://docs.metanomic.net/simulation"
    - name: "modules"
      description: "Everything about your modules"
      externalDocs:
          description: "Find out more"
          url: "http://docs.metanomic.net/modules"
    - name: "analytics"
      description: "Everything about your analytics"
      externalDocs:
          description: "Find out more"
          url: "http://docs.metanomic.net/analytics"
    - name: "events"
      description: "Everything about your events"
      externalDocs:
          description: "Find out more"
          url: "http://docs.metanomic.net/events"
paths:
    /games:
        get:
            operationId: listGames
            summary: List The Games that the account or Organasation has created
            responses:
                "200":
                    description: |-
                        200 response
    /games/{gameId}/apiKeys:
        get:
            operationId: listApiKeys
            parameters:
                - $ref: "#/components/parameters/gameId"
            summary: List The ApiKeys that the account or Organasation has created for the given Game (`gameId`)
            responses:
                "200":
                    description: |-
                        200 response
    /games/{gameId}/economy:
        get:
            operationId: getGameEconomyState
            parameters:
                - $ref: "#/components/parameters/gameId"
            summary: Retrieve The attached Economy balanced state that the account or Organasation has created for the given Game (`gameId`)
            responses:
                "200":
                    description: |-
                        200 response
    /games/{gameId}/events:
        post:
            operationId: submitGameEvent
            parameters:
                - $ref: "#/components/parameters/gameId"
            summary: Submit a Message Event related to the game
            responses:
                "200":
                    description: |-
                        200 response
    /economies:
        get:
            operationId: listEconomies
            summary: List The Economies that the account or Organasation has created
            responses:
                "200":
                    description: |-
                        200 response
    /templates:
        get:
            operationId: listTemplates
            summary: List The Economy Templates available for the current account or Organasation
            responses:
                "200":
                    description: |-
                        200 response
    /economies/{economyId}:
        get:
            operationId: listEconomyVersions
            parameters:
                - $ref: "#/components/parameters/economyId"
            summary: List The Economy versions setups given Economy (`economyId`)
            responses:
                "200":
                    description: |-
                        200 response
    /economies/{economyId}/{economyVersion}:
        get:
            operationId: getEconomyVersion
            parameters:
                - $ref: "#/components/parameters/economyId"
                - $ref: "#/components/parameters/economyVersion"
            summary: Retrieve The Economy setup given Economy (`economyId`) and it's Version (`economyVersion`)
            responses:
                "200":
                    description: |-
                        200 response
    /economies/{economyId}/{economyVersion}/modules:
        get:
            operationId: listEconomyModules
            parameters:
                - $ref: "#/components/parameters/economyId"
                - $ref: "#/components/parameters/economyVersion"
            summary: List The Economy Modules that the account or Organasation has created for the given Economy (`economyId`) and it's Version (`economyVersion`)
            responses:
                "200":
                    description: |-
                        200 response
    /economies/{economyId}/{economyVersion}/profiles:
        get:
            operationId: listEconomyProfiles
            parameters:
                - $ref: "#/components/parameters/economyId"
                - $ref: "#/components/parameters/economyVersion"
            summary: List The Economy Simulation Profiles that the account or Organasation has created for the given Economy (`economyId`) and it's Version (`economyVersion`)
            responses:
                "200":
                    description: |-
                        200 response
    /economies/{economyId}/{economyVersion}/simulations:
        get:
            operationId: listEconomySimulations
            parameters:
                - $ref: "#/components/parameters/economyId"
                - $ref: "#/components/parameters/economyVersion"
            summary: List The Economy Simulations that the account or Organasation has created for the given Economy (`economyId`) and it's Version (`economyVersion`)
            responses:
                "200":
                    description: |-
                        200 response

webhooks:
    # Each webhook needs a name
    newPet:
        # This is a Path Item Object, the only difference is that the request is initiated by the API provider
        post:
            requestBody:
                description: Information about a new pet in the system
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Pet"
            responses:
                "200":
                    description: Return a 200 status to indicate that the data was received successfully

security:
    - guest: []
    - all: []
components:
    parameters:
        gameId:
            in: path
            name: gameId
            required: true
            schema:
                type: string
            description: The id of the game instance
        economyId:
            in: path
            name: economyId
            required: true
            schema:
                type: string
            description: The id of the economy instance
        economyVersion:
            in: path
            name: economyVersion
            required: true
            schema:
                type: string
            description: The version of the economy instance
    schemas:
        Pet:
            allOf:
                - $ref: "#/components/schemas/NewPet"
                - type: object
                  required:
                      - id
                  properties:
                      id:
                          type: integer
                          format: int64

        NewPet:
            type: object
            required:
                - name
            properties:
                name:
                    type: string
                tag:
                    type: string

        Error:
            type: object
            required:
                - code
                - message
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
        name:
            type: object
            properties:
                property:
                    type: integer
    responses:
        name:
            description: ""
            content:
                application/json:
                    schema: {}
    securitySchemes:
        name:
            type: apiKey
            name: api_key
            in: query
        name1:
            type: oauth2
            flows:
                authorizationCode:
                    authorizationUrl: https://domain.test/api/oauth/dialog
                    tokenUrl: https://domain.test/api/oauth/token
                    scopes:
                        read: example read scope
                        write: example write scope
        name2:
            type: http
            scheme: bearer
            bearerFormat: JWT
